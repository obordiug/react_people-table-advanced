{"version":3,"sources":["components/PeopleContext/PeopleContext.tsx","api/getPeople.tsx","components/Header/Header.tsx","components/HomePage/HomePage.tsx","components/PersonName/PersonName.tsx","components/PersonRow/PersonRow.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","components/NewPerson/NewPerson.tsx","App.tsx","index.tsx"],"names":["PeopleContext","React","createContext","people","setPeople","visiblePeople","setVisiblePeople","PeopleProvider","children","useState","useEffect","fetch","then","response","ok","json","Promise","reject","Error","status","statusText","peopleData","contextValue","useMemo","Provider","value","Header","className","to","HomePage","PersonName","person","name","slug","sex","search","useLocation","pathname","classNames","PersonRow","useContext","mother","find","item","motherName","father","fatherName","born","died","PeopleTable","useParams","useSearchParams","searchParams","setSearchParams","sortBy","get","sortOrder","titleCellForSort","length","Object","keys","splice","visiblePeopleAfterSort","sort","p1","p2","localeCompare","map","title","onClick","set","handleTitleClick","toUpperCase","slice","peopleTable__row","PeoplePage","appliedQuery","query","setQuery","applyQuery","useCallback","debounce","newQuery","delete","filter","toLowerCase","includes","type","placeholder","onChange","event","target","NotFoundPage","NewPerson","currentYear","Date","getFullYear","navigate","useNavigate","useForm","mode","register","watch","formState","errors","isValid","handleSubmit","reset","mothers","fathers","onSubmit","data","newPerson","split","join","required","message","pattern","min","max","validate","disabled","App","path","element","replace","ReactDOM","render","document","getElementById"],"mappings":"8ZAGaA,EAAgBC,IAAMC,cAA2B,CAC5DC,OAAQ,GACRC,UAAW,aACXC,cAAe,GACfC,iBAAkB,eAGPC,EAA2B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzC,EAA4BC,mBAAmB,IAA/C,mBAAON,EAAP,KAAeC,EAAf,KACA,EAA0CK,mBAAmB,IAA7D,mBAAOJ,EAAP,KAAsBC,EAAtB,KAEAI,qBAAU,WCVHC,MAAM,GAAD,OAHZ,sEAIGC,MAAK,SAAAC,GACJ,OAAKA,EAASC,GAIPD,EAASE,OAHPC,QAAQC,OAAO,IAAIC,MAAJ,UAAaL,EAASM,OAAtB,cAAkCN,EAASO,iBDSlER,MAAK,SAAAS,GACJjB,EAAUiB,QAEb,IAEH,IAAMC,EAA4BC,mBAAQ,WACxC,MAAO,CACLpB,SACAC,YACAC,gBACAC,sBAED,CAACH,EAAQE,IAEZ,OACE,cAACL,EAAcwB,SAAf,CAAwBC,MAAOH,EAA/B,SACGd,KE5BMkB,G,MAAmB,kBAC9B,wBAAQC,UAAU,SAAlB,SACE,sBAAKA,UAAU,MAAf,UACE,cAAC,IAAD,CAAMA,UAAU,YAAYC,GAAG,IAA/B,uBACA,cAAC,IAAD,CAAMD,UAAU,YAAYC,GAAG,UAA/B,gCCLOC,G,MAAqB,kBAChC,oBAAIF,UAAU,aAAd,yB,uCCMWG,G,YAA8B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpCC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,KAAMC,EAAQH,EAARG,IACZC,EAAWC,cAAXD,OAER,OACE,cAAC,IAAD,CACEP,GAAI,CACFS,SAAS,GAAD,yBAAgBJ,IACxBE,UAEFR,UAAWW,IACT,kBACA,CACE,0BAAmC,MAARJ,EAC3B,wBAAiC,MAARA,IAT/B,SAaGF,MClBMO,EAA4B,SAAC,GAAgB,IAAdR,EAAa,EAAbA,OAClC5B,EAAWqC,qBAAWxC,GAAtBG,OAEFsC,EAASlB,mBAAQ,WACrB,OAAOpB,EAAOuC,MAAK,SAAAC,GAAI,OAAIA,EAAKX,OAASD,EAAOa,gBAC/C,CAACzC,IAEE0C,EAAStB,mBAAQ,WACrB,OAAOpB,EAAOuC,MAAK,SAAAC,GAAI,OAAIA,EAAKX,OAASD,EAAOe,gBAC/C,CAAC3C,IAEJ,OACE,qCACE,oBAAIwB,UAAU,OAAd,SAAqB,cAAC,EAAD,CAAYI,OAAQA,MACzC,oBAAIJ,UAAU,mBAAd,SAAkCI,EAAOG,MACzC,oBAAIP,UAAU,mBAAd,SAAkCI,EAAOgB,OACzC,oBAAIpB,UAAU,mBAAd,SAAkCI,EAAOiB,OACxCP,EAEG,oBAAId,UAAU,OAAd,SAAqB,cAAC,EAAD,CAAYI,OAAQU,MAGzC,oBAAId,UAAU,iBAAd,SAAgCI,EAAOa,YAAc,YAExDC,EAEG,oBAAIlB,UAAU,OAAd,SAAqB,cAAC,EAAD,CAAYI,OAAQc,MAGzC,oBAAIlB,UAAU,iBAAd,SAAgCI,EAAOe,YAAc,gBChClDG,EAAuB,WAClC,MAAkCT,qBAAWxC,GAArCG,EAAR,EAAQA,OAAQE,EAAhB,EAAgBA,cACR4B,EAASiB,cAATjB,KACR,EAAwCkB,cAAxC,mBAAOC,EAAP,KAAqBC,EAArB,KACMC,EAASF,EAAaG,IAAI,WAAa,GACvCC,EAAYJ,EAAaG,IAAI,cAAgB,GAE7CE,EAAmBtD,EAAOuD,OAAS,EACrCC,OAAOC,KAAKzD,EAAO,IAAI0D,OAAO,EAAG,GACjC,GAEEC,EAAmCvC,mBAAQ,WAC/C,GAAI+B,EACF,OAAQA,GACN,IAAK,OACL,IAAK,MACH,MAAsB,QAAdE,EACJnD,EAAc0D,MACd,SAACC,EAAIC,GAAL,OAAYD,EAAGV,GAAQY,cAAcD,EAAGX,OAExCjD,EAAc0D,MACd,SAACC,EAAIC,GAAL,OAAYA,EAAGX,GAAQY,cAAcF,EAAGV,OAG9C,IAAK,OACL,IAAK,OACH,MAAsB,QAAdE,EACJnD,EAAc0D,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGV,GAAUW,EAAGX,MAC/CjD,EAAc0D,MAAK,SAACC,EAAIC,GAAL,OAAYA,EAAGX,GAAUU,EAAGV,MAOzD,OAAOjD,IACN,CAACA,EAAeiD,EAAQE,IAW3B,OACE,wBAAO7B,UAAU,cAAjB,UACE,gCACE,qBAAIA,UAAU,sBAAd,UAEI8B,EAAiBU,KAAI,SAAAC,GAAK,OACxB,oBAEEC,QAAS,kBAjBE,SAACD,GACxBhB,EAAakB,IAAI,SAAUF,GAC3BhB,EAAakB,IACX,YAA4B,QAAdd,GAAuBF,IAAWc,EAAS,OAAS,OAGpEf,EAAgBD,GAWWmB,CAAiBH,IAChCzC,UAAWW,IACT,2BACA,CACE,gCACgB,QAAdkB,GAAuBF,IAAWc,EACpC,iCACgB,SAAdZ,GAAwBF,IAAWc,IAT3C,SAaGA,EAAM,GAAGI,cAAgBJ,EAAMK,MAAM,IAZjCL,MAgBX,oBAAIzC,UAAU,oBAAd,oBACA,oBAAIA,UAAU,oBAAd,yBAGJ,gCACGmC,EAAuBK,KAAI,SAAApC,GAAM,OAChC,oBAEEJ,UAAWW,IAAW,CAAEoC,iBAAkB3C,EAAOE,OAASA,IAF5D,SAIE,cAAC,EAAD,CACEF,OAAQA,KAJLA,EAAOE,eC1EX0C,EAAsB,WACjC,MAAqCnC,qBAAWxC,GAAxCG,EAAR,EAAQA,OAAQG,EAAhB,EAAgBA,iBAChB,EAAwC6C,cAAxC,mBAAOC,EAAP,KAAqBC,EAArB,KACMuB,EAAexB,EAAaG,IAAI,UAAY,GAClD,EAA0B9C,mBAASmE,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAaC,sBACjBC,oBAAS,SAACC,GACJA,EACF9B,EAAakB,IAAI,QAASY,GAE1B9B,EAAa+B,OAAO,SAGtB9B,EAAgBD,KACf,KACH,IAwBF,OAhBA1C,qBAAU,WAENJ,EADEsE,EACezE,EAAOiF,QACtB,SAAArD,GAAM,eAAIA,EAAOC,KAAKqD,cAAcC,SAASV,EAAaS,iBAAhD,UACLtD,EAAOa,kBADF,aACL,EAAmByC,cAAcC,SAClCV,EAAaS,kBAFP,UAILtD,EAAOe,kBAJF,aAIL,EAAmBuC,cAAcC,SAClCV,EAAaS,mBAIFlF,KAElB,CAACA,EAAQyE,IAGV,sBAAKjD,UAAU,cAAf,UACE,oBAAIA,UAAU,qBAAd,yBACA,uBACE4D,KAAK,OACL5D,UAAU,sBACV6D,YAAY,eACZ/D,MAAOoD,EACPY,SA7BoB,SAACC,GACzBZ,EAASY,EAAMC,OAAOlE,OACtBsD,EAAWW,EAAMC,OAAOlE,UA6BtB,cAAC,IAAD,CAAME,UAAU,oBAAoBC,GAAG,cAAvC,wBACA,cAAC,EAAD,QC1DOgE,G,MAAyB,kBACpC,oBAAIjE,UAAU,iBAAd,8B,sBCIWkE,G,MAAsB,WAAO,IAAD,QACvC,EAA8BrD,qBAAWxC,GAAjCG,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UACV0F,GAAc,IAAIC,MAAOC,cACzBC,EAAWC,cAEjB,EAEIC,YAAgB,CAAEC,KAAM,WAD1BC,EADF,EACEA,SAAUC,EADZ,EACYA,MADZ,IACmBC,UAAaC,EADhC,EACgCA,OAAQC,EADxC,EACwCA,QAAWC,EADnD,EACmDA,aAAcC,EADjE,EACiEA,MAG3DC,EAAUrF,mBAAQ,WACtB,OAAOpB,EAAOiF,QACZ,SAAArD,GAAM,MAAmB,MAAfA,EAAOG,MAAgBoE,EAAM,QAAUvE,EAAOiB,UAEzD,CAAC7C,GAASmG,EAAM,UAEbO,EAAUtF,mBAAQ,WACtB,OAAOpB,EAAOiF,QACZ,SAAArD,GAAM,MAAmB,MAAfA,EAAOG,MAAgBoE,EAAM,QAAUvE,EAAOiB,UAEzD,CAAC7C,GAASmG,EAAM,UAenB,OACE,qBAAK3E,UAAU,iBAAf,SACE,uBAAMA,UAAU,OAAOmF,SAAUJ,GAfpB,SAACK,GAChB,IAAMC,EAAS,2BACVD,GADU,IAEbhE,MAAOgE,EAAKhE,KACZC,MAAO+D,EAAK/D,KACZf,KAAK,GAAD,OAAK8E,EAAK/E,KAAKqD,cAAc4B,MAAM,KAAKC,KAAK,KAA7C,YAAqDH,EAAKhE,QAGhE3C,EAAU,GAAD,mBAAKD,GAAL,CAAa6G,KACtBL,IACAV,EAAS,cAKP,UACE,yCAEE,mCACEV,KAAK,OACL5D,UAAU,eACN0E,EAAS,OAAQ,CACnBc,SAAU,CACR1F,OAAO,EACP2F,QAAS,0BAEXC,QAAS,CACP5F,MAAO,iBACP2F,QAAS,kCAKjB,qBAAKzF,UAAU,cAAf,UACS,OAAN6E,QAAM,IAANA,OAAA,EAAAA,EAAQxE,OAAQ,mCAAIwE,QAAJ,IAAIA,GAAJ,UAAIA,EAAQxE,YAAZ,aAAI,EAAcoF,YAErC,sBAAKzF,UAAU,cAAf,UACE,2CAEE,mCACE4D,KAAK,QACL5D,UAAU,mBACVF,MAAM,KACF4E,EAAS,MAAO,CAClBc,SAAU,CACR1F,OAAO,EACP2F,QAAS,iCAKjB,yCAEE,mCACE7B,KAAK,QACL5D,UAAU,mBACVF,MAAM,KACF4E,EAAS,MAAO,CAClBc,SAAU,CACR1F,OAAO,EACP2F,QAAS,oCAMnB,qBAAKzF,UAAU,cAAf,UACS,OAAN6E,QAAM,IAANA,OAAA,EAAAA,EAAQtE,MAAO,mCAAIsE,QAAJ,IAAIA,GAAJ,UAAIA,EAAQtE,WAAZ,aAAI,EAAakF,YAEnC,yCAEE,mCACE7B,KAAK,SACL5D,UAAU,eACN0E,EAAS,OAAQ,CACnBc,SAAU,CACR1F,OAAO,EACP2F,QAAS,0BAEXE,IAAK,CACH7F,MAAO,KACP2F,QAAQ,mCAAD,OAAqCtB,EAArC,UAETyB,IAAK,CACH9F,MAAOqE,EACPsB,QAAQ,mCAAD,OAAqCtB,EAArC,UAET0B,SAAU,SAAA/F,GAAK,OAAIA,IAAU6E,EAAM,gBAIzC,sBAAK3E,UAAU,cAAf,WACS,OAAN6E,QAAM,IAANA,OAAA,EAAAA,EAAQzD,OAAQ,mCAAIyD,QAAJ,IAAIA,GAAJ,UAAIA,EAAQzD,YAAZ,aAAI,EAAcqE,WACjCd,EAAM,SAAWA,EAAM,SACvB,uEAGJ,yCAEE,mCACEf,KAAK,SACL5D,UAAU,cACV8F,UAAWnB,EAAM,SACbD,EAAS,OAAQ,CACnBc,SAAU,yBACVG,IAAK,CACH7F,MAAO,KACP2F,QAAQ,mCAAD,OAAqCtB,EAArC,UAETyB,IAAK,CACH9F,OAAQ6E,EAAM,QAAU,IACxBc,QAAS,yCAEXI,SAAU,SAAA/F,GAAK,OAAIA,GAASqE,UAKlC,sBAAKnE,UAAU,cAAf,WACS,OAAN6E,QAAM,IAANA,OAAA,EAAAA,EAAQxD,OAAQ,mCAAIwD,QAAJ,IAAIA,GAAJ,UAAIA,EAAQxD,YAAZ,aAAI,EAAcoE,WACjCd,EAAM,QAAUR,GAChB,4FAGJ,+CAEE,iDACEnE,UAAU,kCACV8F,UAAWnB,EAAM,SACbD,EAAS,eAHf,cAKE,2BACCO,EAAQzC,KAAI,SAAA1B,GAAM,OACjB,iCAA2BA,EAAOT,MAArBS,EAAOR,gBAI1B,+CAEE,iDACEN,UAAU,kCACV8F,UAAWnB,EAAM,SACbD,EAAS,eAHf,cAKE,2BACCQ,EAAQ1C,KAAI,SAAAtB,GAAM,OACjB,iCAA2BA,EAAOb,MAArBa,EAAOZ,gBAI1B,wBACEsD,KAAK,SACL5D,UAAU,eACV8F,UAAWhB,EAHb,+BCpJOiB,EAnBM,WACnB,OACE,cAAC,EAAD,UACE,sBAAK/F,UAAU,MAAf,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgG,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,IAA9B,SACE,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,EAAD,QAE/B,cAAC,IAAD,CAAOD,KAAK,aAAaC,QAAS,cAAC,EAAD,MAClC,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUhG,GAAG,IAAIiG,SAAO,MACpD,cAAC,IAAD,CAAOF,KAAK,IAAIC,QAAS,cAAC,EAAD,eCnBnCE,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e0602999.chunk.js","sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport { getPeople } from '../../api/getPeople';\n\nexport const PeopleContext = React.createContext<ContextType>({\n  people: [],\n  setPeople: () => {},\n  visiblePeople: [],\n  setVisiblePeople: () => {},\n});\n\nexport const PeopleProvider: React.FC = ({ children }) => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [visiblePeople, setVisiblePeople] = useState<Person[]>([]);\n\n  useEffect(() => {\n    getPeople()\n      .then(peopleData => {\n        setPeople(peopleData);\n      });\n  }, []);\n\n  const contextValue: ContextType = useMemo(() => {\n    return {\n      people,\n      setPeople,\n      visiblePeople,\n      setVisiblePeople,\n    };\n  }, [people, visiblePeople]);\n\n  return (\n    <PeopleContext.Provider value={contextValue}>\n      {children}\n    </PeopleContext.Provider>\n  );\n};\n","const BASE_URL\n= 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = (): Promise<Person[]> => {\n  return fetch(`${BASE_URL}`)\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject(new Error(`${response.status} - ${response.statusText}`));\n      }\n\n      return response.json();\n    });\n};\n","import React from 'react';\nimport './Header.scss';\nimport { Link } from 'react-router-dom';\n\nexport const Header: React.FC = () => (\n  <header className=\"header\">\n    <nav className=\"nav\">\n      <Link className=\"nav__link\" to=\"/\">Home page</Link>\n      <Link className=\"nav__link\" to=\"/people\">People page</Link>\n    </nav>\n  </header>\n);\n","import React from 'react';\nimport './HomePage.scss';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"home-title\">Home page</h1>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport './PersonName.scss';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonName: React.FC<Props> = ({ person }) => {\n  const { name, slug, sex } = person;\n  const { search } = useLocation();\n\n  return (\n    <Link\n      to={{\n        pathname: `${`/people/${slug}`}`,\n        search,\n      }}\n      className={classNames(\n        'personName-link',\n        {\n          'personName-link--female': sex === 'f',\n          'personName-link--male': sex === 'm',\n        },\n      )}\n    >\n      {name}\n    </Link>\n  );\n};\n","import React, { useContext, useMemo } from 'react';\n\nimport './PersonRow.scss';\nimport { PeopleContext } from '../PeopleContext';\nimport { PersonName } from '../PersonName';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonRow:React.FC<Props> = ({ person }) => {\n  const { people } = useContext(PeopleContext);\n\n  const mother = useMemo(() => {\n    return people.find(item => item.name === person.motherName);\n  }, [people]);\n\n  const father = useMemo(() => {\n    return people.find(item => item.name === person.fatherName);\n  }, [people]);\n\n  return (\n    <>\n      <td className=\"cell\"><PersonName person={person} /></td>\n      <td className=\"cell cell-center\">{person.sex}</td>\n      <td className=\"cell cell-center\">{person.born}</td>\n      <td className=\"cell cell-center\">{person.died}</td>\n      {mother\n        ? (\n          <td className=\"cell\"><PersonName person={mother} /></td>\n        )\n        : (\n          <td className=\"cell cell-bold\">{person.motherName || 'no data'}</td>\n        )}\n      {father\n        ? (\n          <td className=\"cell\"><PersonName person={father} /></td>\n        )\n        : (\n          <td className=\"cell cell-bold\">{person.fatherName || 'no data'}</td>\n        )}\n    </>\n  );\n};\n","import React, { useContext, useMemo } from 'react';\nimport './PeopleTable.scss';\nimport classNames from 'classnames';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport { PeopleContext } from '../PeopleContext';\nimport { PersonRow } from '../PersonRow';\n\nexport const PeopleTable:React.FC = () => {\n  const { people, visiblePeople } = useContext(PeopleContext);\n  const { slug } = useParams();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const sortBy = searchParams.get('sortBy') || '';\n  const sortOrder = searchParams.get('sortOrder') || '';\n\n  const titleCellForSort = people.length > 0\n    ? Object.keys(people[0]).splice(0, 4)\n    : [];\n\n  const visiblePeopleAfterSort: Person[] = useMemo(() => {\n    if (sortBy) {\n      switch (sortBy) {\n        case 'name':\n        case 'sex':\n          return (sortOrder === 'asc'\n            ? visiblePeople.sort(\n              (p1, p2) => p1[sortBy].localeCompare(p2[sortBy]),\n            )\n            : visiblePeople.sort(\n              (p1, p2) => p2[sortBy].localeCompare(p1[sortBy]),\n            )\n          );\n        case 'born':\n        case 'died':\n          return (sortOrder === 'asc'\n            ? visiblePeople.sort((p1, p2) => p1[sortBy] - p2[sortBy])\n            : visiblePeople.sort((p1, p2) => p2[sortBy] - p1[sortBy])\n          );\n        default:\n          break;\n      }\n    }\n\n    return visiblePeople;\n  }, [visiblePeople, sortBy, sortOrder]);\n\n  const handleTitleClick = (title: string) => {\n    searchParams.set('sortBy', title);\n    searchParams.set(\n      'sortOrder', (sortOrder === 'asc' && sortBy === title) ? 'desc' : 'asc',\n    );\n\n    setSearchParams(searchParams);\n  };\n\n  return (\n    <table className=\"peopleTable\">\n      <thead>\n        <tr className=\"peopleTable__header\">\n          {\n            titleCellForSort.map(title => (\n              <th\n                key={title}\n                onClick={() => handleTitleClick(title)}\n                className={classNames(\n                  'peopleTable__cell-filter',\n                  {\n                    'peopleTable__cell-filter--asc':\n                      sortOrder === 'asc' && sortBy === title,\n                    'peopleTable__cell-filter--desc':\n                      sortOrder === 'desc' && sortBy === title,\n                  },\n                )}\n              >\n                {title[0].toUpperCase() + title.slice(1)}\n              </th>\n            ))\n          }\n          <th className=\"peopleTable__cell\">Mother</th>\n          <th className=\"peopleTable__cell\">Father</th>\n        </tr>\n      </thead>\n      <tbody>\n        {visiblePeopleAfterSort.map(person => (\n          <tr\n            key={person.slug}\n            className={classNames({ peopleTable__row: person.slug === slug })}\n          >\n            <PersonRow\n              person={person}\n            />\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, {\n  useState, useCallback, useContext, useEffect,\n} from 'react';\n\nimport { useSearchParams, Link } from 'react-router-dom';\nimport { debounce } from 'lodash';\nimport './PeoplePage.scss';\nimport { PeopleContext } from '../PeopleContext';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeoplePage:React.FC = () => {\n  const { people, setVisiblePeople } = useContext(PeopleContext);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const appliedQuery = searchParams.get('query') || '';\n  const [query, setQuery] = useState(appliedQuery);\n\n  const applyQuery = useCallback(\n    debounce((newQuery) => {\n      if (newQuery) {\n        searchParams.set('query', newQuery);\n      } else {\n        searchParams.delete('query');\n      }\n\n      setSearchParams(searchParams);\n    }, 500),\n    [],\n  );\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    applyQuery(event.target.value);\n  };\n\n  useEffect(() => {\n    if (appliedQuery) {\n      setVisiblePeople(people.filter(\n        person => person.name.toLowerCase().includes(appliedQuery.toLowerCase())\n          || person.motherName?.toLowerCase().includes(\n            appliedQuery.toLowerCase(),\n          )\n          || person.fatherName?.toLowerCase().includes(\n            appliedQuery.toLowerCase(),\n          ),\n      ));\n    } else {\n      setVisiblePeople(people);\n    }\n  }, [people, appliedQuery]);\n\n  return (\n    <div className=\"people-page\">\n      <h1 className=\"people-page__title\">People Page</h1>\n      <input\n        type=\"text\"\n        className=\"people-page__search\"\n        placeholder=\"Enter a name\"\n        value={query}\n        onChange={handleQueryChange}\n      />\n      <Link className=\"people-page__link\" to=\"/people/new\">Add person</Link>\n      <PeopleTable />\n    </div>\n  );\n};\n","import React from 'react';\nimport './NotFoundPage.scss';\n\nexport const NotFoundPage: React.FC = () => (\n  <h1 className=\"notFound-title\">Page not found</h1>\n);\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useContext, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport './NewPerson.scss';\n\nimport { PeopleContext } from '../PeopleContext';\n\nexport const NewPerson: React.FC = () => {\n  const { people, setPeople } = useContext(PeopleContext);\n  const currentYear = new Date().getFullYear();\n  const navigate = useNavigate();\n\n  const {\n    register, watch, formState: { errors, isValid }, handleSubmit, reset,\n  } = useForm<Person>({ mode: 'onBlur' });\n\n  const mothers = useMemo(() => {\n    return people.filter(\n      person => person.sex === 'f' && +watch('born') < person.died,\n    );\n  }, [people, +watch('born')]);\n\n  const fathers = useMemo(() => {\n    return people.filter(\n      person => person.sex === 'm' && +watch('born') < person.died,\n    );\n  }, [people, +watch('born')]);\n\n  const onSubmit = (data: Person): void => {\n    const newPerson = {\n      ...data,\n      born: +data.born,\n      died: +data.died,\n      slug: `${data.name.toLowerCase().split(' ').join('-')}-${data.born}`,\n    };\n\n    setPeople([...people, newPerson]);\n    reset();\n    navigate('/people');\n  };\n\n  return (\n    <div className=\"container-form\">\n      <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            {...register('name', {\n              required: {\n                value: true,\n                message: 'This field is required',\n              },\n              pattern: {\n                value: /^[A-Za-z\\s]+$/i,\n                message: 'Only letters and spaces',\n              },\n            })}\n          />\n        </label>\n        <div className=\"form__error\">\n          {errors?.name && <p>{errors?.name?.message}</p>}\n        </div>\n        <div className=\"form__radio\">\n          <label>\n            Female\n            <input\n              type=\"radio\"\n              className=\"form__radio-item\"\n              value=\"f\"\n              {...register('sex', {\n                required: {\n                  value: true,\n                  message: 'This field is required',\n                },\n              })}\n            />\n          </label>\n          <label>\n            Male\n            <input\n              type=\"radio\"\n              className=\"form__radio-item\"\n              value=\"m\"\n              {...register('sex', {\n                required: {\n                  value: true,\n                  message: 'This field is required',\n                },\n              })}\n            />\n          </label>\n        </div>\n        <div className=\"form__error\">\n          {errors?.sex && <p>{errors?.sex?.message}</p>}\n        </div>\n        <label>\n          Born\n          <input\n            type=\"number\"\n            className=\"form__input\"\n            {...register('born', {\n              required: {\n                value: true,\n                message: 'This field is required',\n              },\n              min: {\n                value: 1400,\n                message: `Enter year between 1400 and the ${currentYear} year`,\n              },\n              max: {\n                value: currentYear,\n                message: `Enter year between 1400 and the ${currentYear} year`,\n              },\n              validate: value => value <= +watch('died'),\n            })}\n          />\n        </label>\n        <div className=\"form__error\">\n          {errors?.born && <p>{errors?.born?.message}</p>}\n          {+watch('died') < +watch('born') && (\n            <p>Year of died less than year of born</p>\n          )}\n        </div>\n        <label>\n          Died\n          <input\n            type=\"number\"\n            className=\"form__input\"\n            disabled={!watch('born')}\n            {...register('died', {\n              required: 'This field is required',\n              min: {\n                value: 1400,\n                message: `Enter year between 1400 and the ${currentYear} year`,\n              },\n              max: {\n                value: +watch('born') + 150,\n                message: 'A person cannot be over 150 years old',\n              },\n              validate: value => value <= currentYear,\n\n            })}\n          />\n        </label>\n        <div className=\"form__error\">\n          {errors?.died && <p>{errors?.died?.message}</p>}\n          {+watch('died') > currentYear && (\n            <p>The year of died cannot be greater than the current year</p>\n          )}\n        </div>\n        <label>\n          MotherName\n          <select\n            className=\"form__input form__input--select\"\n            disabled={!watch('born')}\n            {...register('motherName')}\n          >\n            <option />\n            {mothers.map(mother => (\n              <option key={mother.slug}>{mother.name}</option>\n            ))}\n          </select>\n        </label>\n        <label>\n          FatherName\n          <select\n            className=\"form__input form__input--select\"\n            disabled={!watch('born')}\n            {...register('fatherName')}\n          >\n            <option />\n            {fathers.map(father => (\n              <option key={father.slug}>{father.name}</option>\n            ))}\n          </select>\n        </label>\n        <button\n          type=\"submit\"\n          className=\"form__submit\"\n          disabled={!isValid}\n        >\n          Add person\n        </button>\n      </form>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\n\nimport './App.scss';\n\nimport { PeopleProvider } from './components/PeopleContext';\nimport { Header } from './components/Header';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { NewPerson } from './components/NewPerson';\n\nconst App:React.FC = () => {\n  return (\n    <PeopleProvider>\n      <div className=\"App\">\n        <Header />\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"people\" element={<PeoplePage />}>\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"people/new\" element={<NewPerson />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </PeopleProvider>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}